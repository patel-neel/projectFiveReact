{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","handleChange","event","preventDefault","target","name","value","setState","handleAutofill","symbolting","state","userInput","axios","method","url","params","function","keywords","apikey","then","result","data","autoFill","handleFillTextbox","index","symbol","handleSubmit","dataResponse","format","res","justTheTicker","stockQuote","Object","entries","companyTicker","console","log","interval","datesArray","pricesArray","i","push","chartData","datasets","label","labels","reverse","companySymbol","percentString","replace","companyTitle","mainPercentChange","exchange","industry","companyWebsite","companyDescription","ceo","sector","companyImage","alert","activeCompanyOne","activeCompanyTwo","activeCompanyThree","activeCompanyFour","activeCompanyFive","activeCompanySix","activeCompanySeven","activeCompanyEight","activeCompanyNine","activeCompanyTen","chartDates","chartPrices","userPortfolio","backgroundColor","borderColor","activeArray","className","autoComplete","action","type","onSubmit","this","onChange","onKeyUp","onClick","map","key","style","color","width","height","options","responsive","href","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ca5fba0b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n// import Banner from './Banner';\nimport { Line } from 'react-chartjs-2';\nimport './App.scss';\nimport { thisExpression } from '@babel/types';\n\n\n\nclass App extends Component {\n\n  constructor(){\n    super();\n    this.state = {\n      activeCompanyOne: \"\",\n      activeCompanyTwo: \"\",\n      activeCompanyThree: \"\",\n      activeCompanyFour: \"\",\n      activeCompanyFive: \"\",\n      activeCompanySix: \"\",\n      activeCompanySeven: \"\",\n      activeCompanyEight: \"\",\n      activeCompanyNine: \"\",\n      activeCompanyTen: \"\",\n\n      companyTicker:'',\n\n      companyTitle:\"Facebook Inc.\",\n      mainPercentChange: '0.00',\n      stockQuote: [],\n      autoFill: [],\n      userInput: '',\n      chartDates: [],\n      chartPrices: [],\n\n      userPortfolio:[],\n\n      exchange:'',\n      industry:'',\n      companyWebsite: '',\n      companyDescription: '',\n      ceo: '',\n      sector:'',\n      companyImage:'',\n\n\n      chartData: {\n        labels: [],\n        datasets: [\n          {\n            label: '',\n            data: [],\n            backgroundColor: '#737373',\n            borderColor: 'rgba(136,136,136,0.5)',\n          }\n        ],\n      }\n    }\n  }\n\n  componentDidMount(){\n    axios({\n      method: 'GET',\n      url: `https://financialmodelingprep.com/api/v3/stock/actives`,\n      dataResponse: 'json',\n    }).then(result => {\n\n      result = result.data\n\n      let activeArray = result[\"mostActiveStock\"];\n\n      this.setState({\n        activeCompanyOne: activeArray[0],\n        activeCompanyTwo: activeArray[1],\n        activeCompanyThree: activeArray[2],\n        activeCompanyFour: activeArray[3],\n        activeCompanyFive: activeArray[4],\n        activeCompanySix: activeArray[5],\n        activeCompanySeven: activeArray[6],\n        activeCompanyEight: activeArray[7],\n        activeCompanyNine: activeArray[8],\n        activeCompanyTen: activeArray[9],\n      })\n\n    })\n    axios({\n      method: 'GET',\n      url: `https://www.alphavantage.co/query?/`,\n      dataResponse: 'json',\n      params: {\n        function: 'GLOBAL_QUOTE',\n        symbol: 'FB',\n        apikey: \"WPZV8PD9NGMXNUEF\",\n        format: \"json\",\n\n      },\n    }).then(res => {\n      //res all the information for the searched stock ticker\n      res = res.data['Global Quote'];\n\n      this.setState({\n        stockQuote: Object.entries(res),\n        userInput: \"\",\n      })\n\n      axios({\n        method: 'GET',\n        url: `https://www.alphavantage.co/query?/`,\n        dataResponse: 'json',\n        params: {\n          function: 'TIME_SERIES_INTRADAY',\n          symbol: 'FB',\n          apikey: \"WPZV8PD9NGMXNUEF\",\n          interval: '5min',\n          format: \"json\",\n        },\n\n      }).then(result => {\n        result = result.data[\"Time Series (5min)\"];\n        console.log(result);\n        let datesArray = [];\n        let pricesArray = [];\n\n        for (let i in result) {\n          datesArray.push(i)\n          pricesArray.push(result[i][\"4. close\"])\n        }\n\n        let arrayDataSets = [{\n          label: '',\n          data: pricesArray,\n        }]\n\n        let myChartData = {\n          arrayDataSets,\n          pricesArray\n        }\n\n        this.state.chartData.datasets[0].label = 'FB';\n        this.state.chartData.labels = datesArray.reverse();\n        this.state.chartData.datasets[0].data = pricesArray.reverse();\n\n        this.setState({\n          // chartData: this.state.myChartData\n          state: this.state,\n        })\n\n      })\n\n\n      axios({\n        method: 'GET',\n        url: `https://financialmodelingprep.com/api/v3/company/profile/FB`,\n        dataResponse: 'json',\n      }).then(result => {\n\n        result = result.data['profile'];\n\n        let percentString = result['changesPercentage'].replace(/[!@#$%^&*()]/g, \"\");\n\n        this.setState({\n          companyTitle: result['companyName'],\n          mainPercentChange: percentString,\n        })\n\n      })\n    })\n  }\n\n\n  handleChange = (event) => {\n    event.preventDefault()\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    })\n  }\n\n  handleAutofill = (event) => {\n    event.preventDefault()\n    let symbolting = this.state.userInput\n\n    if (symbolting !== ''){\n      axios({\n        method: 'GET',\n        url: 'https://www.alphavantage.co/query?/',\n        params: {\n          function: 'SYMBOL_SEARCH',\n          keywords: symbolting,\n          apikey: \"WPZV8PD9NGMXNUEF\",\n        },\n      }).then(result => {\n        result = result.data[\"bestMatches\"]\n\n\n        this.setState({\n          autoFill: result\n        })\n      })\n    }else{\n      this.setState({\n        autoFill:[]\n      })\n    }\n  }\n\n  handleFillTextbox = index => {\n    let symbol = this.state.autoFill[index][\"1. symbol\"]\n\n    this.setState({\n      userInput: symbol,\n      autoFill: [],\n    })\n  }\n\n\n  handleSubmit = (event) => {\n    event.preventDefault()\n\n    let symbol = this.state.userInput\n\n    if (symbol !==''){\n      axios({\n        method: 'GET',\n        url: `https://www.alphavantage.co/query?/`,\n        dataResponse: 'json',\n        params: {\n          function: 'GLOBAL_QUOTE',\n          symbol: symbol,\n          apikey: \"WPZV8PD9NGMXNUEF\",\n          format: \"json\",\n\n        },\n      }).then(res => {\n        //res all the information for the searched stock ticker\n        res = res.data['Global Quote'];\n\n        let justTheTicker = res['01. symbol'];\n\n        this.setState({\n          stockQuote: Object.entries(res),\n          userInput: \"\",\n          companyTicker: justTheTicker,\n        })\n        console.log(Object.entries(res))\n\n\n        axios({\n          method: 'GET',\n          url: `https://www.alphavantage.co/query?/`,\n          dataResponse: 'json',\n          params: {\n            function: 'TIME_SERIES_INTRADAY',\n            symbol: symbol,\n            apikey: \"WPZV8PD9NGMXNUEF\",\n            interval: '5min',\n            format: \"json\",\n          },\n\n        }).then(result => {\n          result = result.data[\"Time Series (5min)\"];\n          console.log(result);\n          let datesArray = [];\n          let pricesArray = [];\n\n          for (let i in result) {\n            datesArray.push(i)\n            pricesArray.push(result[i][\"4. close\"])\n          }\n\n          console.log(pricesArray);\n          console.log(datesArray);\n\n          let arrayDataSets = [{\n            label: '',\n            data: pricesArray,\n          }]\n\n          let myChartData = {\n            arrayDataSets,\n            pricesArray\n          }\n\n          \n          this.state.chartData.datasets[0].label = symbol;\n          this.state.chartData.labels = datesArray.reverse();\n          this.state.chartData.datasets[0].data = pricesArray.reverse();\n\n          this.setState({\n            // chartData: myChartData\n            state: this.state,\n          })\n\n        })\n\n\n        axios({\n          method: 'GET',\n          url: `https://financialmodelingprep.com/api/v3/company/profile/${symbol}`,\n          dataResponse: 'json',\n        }).then(result=>{\n\n          res = result.data['profile'];\n\n          let companySymbol = result.data['symbol']\n\n          let percentString = res['changesPercentage'].replace(/[!@#$%^&*()]/g, \"\");\n\n          this.setState({\n            companyTitle: res['companyName'],\n            mainPercentChange: percentString,\n            exchange: res[\"exchange\"],\n            industry: res[\"industry\"],\n            companyWebsite: res[\"website\"],\n            companyDescription: res[\"description\"],\n            ceo: res[\"ceo\"],\n            sector: res[\"sector\"],\n            companyImage: res[\"image\"],\n            companyTicker: companySymbol,\n\n          })\n\n          console.log(companySymbol);\n          // console.log(result[\"description\"]);\n\n          console.log(percentString)\n          console.log(symbol)\n        })\n      })\n\n    }else{\n      alert('please enter a company ticker')\n    }\n  }\n\n  // handleAddPortfolio(event){\n  //   event.preventDefault();\n    \n  //   alert(this.state.ceo)\n\n\n    // axios({\n    //   method: 'GET',\n    //   url: `https://financialmodelingprep.com/api/v3/company/profile/${symbol}`,\n    //   dataResponse: 'json',\n    // }).then(res=>{\n    //   res=res.data\n\n    //   console.log(res)\n\n    // })\n    \n  // }\n\n\n  render() {\n\n    let handleAddPortfolio=(event)=>{\n      event.preventDefault();\n\n      let companySymbol = this.state.companyTicker\n\n      axios({\n        method: 'GET',\n        url: `https://financialmodelingprep.com/api/v3/company/profile/${companySymbol}`,\n        dataResponse: 'json',\n      }).then(res=>{\n        res=res.data\n\n        console.log(res)\n\n      })\n\n      \n    }\n\n    return (\n      <div className=\"App\">\n        <nav>\n          <div className=\"title\">\n            <h1>Juno</h1>\n            <h1>Finance</h1>\n          </div>\n\n\n          <div className=\"searchAutofill\">\n            <form autoComplete=\"off\" action=\"\">\n              <div className=\"searchBar\">\n                <input type=\"text\" name=\"userInput\" onSubmit={this.handleSubmit} value={this.state.userInput} onChange={this.handleChange} onKeyUp={this.handleAutofill}></input>\n                <button className=\"searchButton\" type=\"submit\" value=\"submit\" onSubmit={this.handleSubmit} onClick={this.handleSubmit}><i className=\"fa fa-search\"></i></button>\n              </div>\n            </form>\n            <ul className=\"dropdownSearch\">\n              {\n                this.state.autoFill.map((value, index) => {\n                  return <li key={index} onClick={() => this.handleFillTextbox(index)} onSubmit={this.handleSubmit}> {value[\"1. symbol\"]} - {value[\"2. name\"]}</li>\n                })\n              }\n            </ul>\n          </div>\n          <div className=\"stockPortfolio\">\n            {\n              \n            }\n          </div>\n        </nav>\n        \n\n\n\n        <main>\n          <div className='banner'>\n            <ul className=\"activeList\">\n              <li className=\"activeContainer\">\n                <h4>{this.state.activeCompanyOne[\"ticker\"]}</h4>\n                <p>{this.state.activeCompanyOne[\"price\"]} (<span style={{ color: this.state.activeCompanyOne[\"changes\"] > 0 ? 'green' : 'red' }}>{this.state.activeCompanyOne[\"changes\"]}</span>)</p>\n              </li>\n              <li className=\"activeContainer\">\n                <h4>{this.state.activeCompanyTwo[\"ticker\"]}</h4>\n                <p>{this.state.activeCompanyTwo[\"price\"]} (<span style={{ color: this.state.activeCompanyTwo[\"changes\"] > 0 ? 'green' : 'red' }}>{this.state.activeCompanyTwo[\"changes\"]}</span>)</p>\n              </li>\n\n              <li className=\"activeContainer\">\n                <h4>{this.state.activeCompanyThree[\"ticker\"]}</h4>\n                <p>{this.state.activeCompanyThree[\"price\"]} (<span style={{ color: this.state.activeCompanyThree[\"changes\"] > 0 ? 'green' : 'red' }}>{this.state.activeCompanyThree[\"changes\"]}</span>)</p>\n              </li>\n              <li className=\"activeContainer\">\n                <h4>{this.state.activeCompanyFour[\"ticker\"]}</h4>\n                <p>{this.state.activeCompanyFour[\"price\"]} (<span style={{ color: this.state.activeCompanyFour[\"changes\"] > 0 ? 'green' : 'red' }}>{this.state.activeCompanyFour[\"changes\"]}</span>)</p>\n              </li>\n\n              <li className=\"activeContainer\">\n                <h4>{this.state.activeCompanyFive[\"ticker\"]}</h4>\n                <p>{this.state.activeCompanyFive[\"price\"]} (<span style={{ color: this.state.activeCompanyFive[\"changes\"] > 0 ? 'green' : 'red' }}>{this.state.activeCompanyFive[\"changes\"]}</span>)</p>\n              </li>\n              <li className=\"activeContainer\">\n                <h4>{this.state.activeCompanySix[\"ticker\"]}</h4>\n                <p>{this.state.activeCompanySix[\"price\"]} (<span style={{ color: this.state.activeCompanySix[\"changes\"] > 0 ? 'green' : 'red' }}>{this.state.activeCompanySix[\"changes\"]}</span>)</p>\n              </li>\n\n              <li className=\"activeContainer\">\n                <h4>{this.state.activeCompanySeven[\"ticker\"]}</h4>\n                <p>{this.state.activeCompanySeven[\"price\"]} (<span style={{ color: this.state.activeCompanySeven[\"changes\"] > 0 ? 'green' : 'red' }}>{this.state.activeCompanySeven[\"changes\"]}</span>)</p>\n              </li>\n              <li className=\"activeContainer\">\n                <h4>{this.state.activeCompanyEight[\"ticker\"]}</h4>\n                <p>{this.state.activeCompanyEight[\"price\"]} (<span style={{ color: this.state.activeCompanyEight[\"changes\"] > 0 ? 'green' : 'red' }}>{this.state.activeCompanyEight[\"changes\"]}</span>)</p>\n              </li>\n              <li className=\"activeContainer\">\n                <h4>{this.state.activeCompanyNine[\"ticker\"]}</h4>\n                <p>{this.state.activeCompanyNine[\"price\"]} (<span style={{ color: this.state.activeCompanyNine[\"changes\"] > 0 ? 'green' : 'red' }}>{this.state.activeCompanyNine[\"changes\"]}</span>)</p>\n              </li>\n              <li className=\"activeContainer\">\n                <h4>{this.state.activeCompanyNine[\"ticker\"]}</h4>\n                <p>{this.state.activeCompanyNine[\"price\"]} (<span style={{ color: this.state.activeCompanyNine[\"changes\"] > 0 ? 'green' : 'red' }}>{this.state.activeCompanyNine[\"changes\"]}</span>)</p>\n              </li>\n              <li className=\"activeContainer\">\n                <h4>{this.state.activeCompanyTen[\"ticker\"]}</h4>\n                <p>{this.state.activeCompanyTen[\"price\"]} (<span style={{ color: this.state.activeCompanyTen[\"changes\"] > 0 ? 'green' : 'red' }}>{this.state.activeCompanyTen[\"changes\"]}</span>)</p>\n              </li>\n            </ul>\n\n          </div>\n\n\n          <div className=\"wrapper chartNumbersInfo\">\n            <h2>{this.state.companyTitle} (<span style={{ color: this.state.mainPercentChange > 0 ? 'green' : 'red' }}>{this.state.mainPercentChange}%</span>) <button type=\"submit\" onClick={handleAddPortfolio}><i className=\"fa fa-star\"></i></button></h2>\n\n            <div className=\"numbersGraph\">\n              <div className=\"companyNumbers\">\n                \n                <ul className=\"stockInformation\">\n                  {\n                    this.state.stockQuote.map((value, index) => {\n                      return <li key={index}><span>{value[0]}</span> <span>{value[1]}</span></li>\n                      \n                    })\n                  }\n                </ul>\n              </div>\n              <div className=\"stockChart\">\n                <Line\n                  data={this.state.chartData}\n                  width={800}\n                  height={500}\n                  options={{ responsive: true,}}\n                />\n              </div>\n            </div>\n          </div>\n\n          <div className=\"aboutCompany\">\n            <h4>Company CEO: {this.state.ceo}</h4>\n            <h4>Company URL: <a href={this.state.companyWebsite}>{this.state.companyWebsite}</a></h4>\n            <h4>Exchange: {this.state.exchange}</h4>\n            <h4>Industry: {this.state.industry}</h4>\n            <h4>Sector: {this.state.sector}</h4>\n            <h4>About {this.state.companyTitle}:</h4>\n            <p>{this.state.companyDescription}</p>\n\n\n          </div>\n\n        </main>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport '../node_modules/font-awesome/css/font-awesome.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}