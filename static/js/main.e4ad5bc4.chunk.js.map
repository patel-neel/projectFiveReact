{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","handleChange","event","preventDefault","target","name","value","setState","handleAutofill","symbolting","state","userInput","axios","method","url","params","function","keywords","apikey","then","result","data","autoFill","handleFillTextbox","index","symbol","handleSubmit","dataResponse","format","res","justTheTicker","stockQuote","Object","entries","companyTicker","interval","datesArray","pricesArray","i","push","chartData","datasets","label","labels","reverse","companySymbol","percentString","replace","companyTitle","mainPercentChange","exchange","industry","companyWebsite","companyDescription","ceo","sector","companyImage","alert","topNews","activeCompanyOne","activeCompanyTwo","activeCompanyThree","activeCompanyFour","activeCompanyFive","activeCompanySix","activeCompanySeven","activeCompanyEight","activeCompanyNine","activeCompanyTen","chartDates","chartPrices","userPortfolio","backgroundColor","borderColor","pointRadius","activeArray","className","autoComplete","action","type","onSubmit","this","onChange","onKeyUp","onClick","map","key","style","color","width","height","options","maintainAspectRatio","href","src","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e4ad5bc4.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n// import Banner from './Banner';\nimport { Line } from 'react-chartjs-2';\nimport Particles from 'react-particles-js';\nimport './App.scss';\n\n\n\nclass App extends Component {\n\n  constructor(){\n    super();\n    this.state = {\n\n      topNews: [],\n\n      activeCompanyOne: \"\",\n      activeCompanyTwo: \"\",\n      activeCompanyThree: \"\",\n      activeCompanyFour: \"\",\n      activeCompanyFive: \"\",\n      activeCompanySix: \"\",\n      activeCompanySeven: \"\",\n      activeCompanyEight: \"\",\n      activeCompanyNine: \"\",\n      activeCompanyTen: \"\",\n\n      companyTicker:'',\n\n      companyTitle:\"Facebook Inc.\",\n      mainPercentChange: '0.00',\n      stockQuote: [],\n      autoFill: [],\n      userInput: '',\n      chartDates: [],\n      chartPrices: [],\n\n      userPortfolio:[],\n\n      exchange:'',\n      industry:'',\n      companyWebsite: '',\n      companyDescription: '',\n      ceo: '',\n      sector:'',\n      companyImage:'',\n\n\n      chartData: {\n        labels: [],\n        datasets: [\n          {\n            label: '',\n            data: [],\n            backgroundColor: '#737373',\n            borderColor: 'rgba(136,136,136,0.5)',\n            pointRadius: 1,\n            \n          }\n        ],\n      }\n    }\n  }\n\n  componentDidMount(){\n\n    axios({\n      method: \"GET\",\n      url: 'https://stocknewsapi.com/api/v1/category?section=general&items=5&token=f3rxhssyrsg70doigztgrkpzkmrp2pealzljbdsv',\n      dataResponse: 'json',\n    }).then(res => {\n      res = res.data[\"data\"]\n\n\n      this.setState({\n        topNews: res\n      })\n    })\n\n\n\n    axios({\n      method: 'GET',\n      url: `https://financialmodelingprep.com/api/v3/stock/actives`,\n      dataResponse: 'json',\n    }).then(result => {\n\n      result = result.data\n\n      let activeArray = result[\"mostActiveStock\"];\n\n      this.setState({\n        activeCompanyOne: activeArray[0],\n        activeCompanyTwo: activeArray[1],\n        activeCompanyThree: activeArray[2],\n        activeCompanyFour: activeArray[3],\n        activeCompanyFive: activeArray[4],\n        activeCompanySix: activeArray[5],\n        activeCompanySeven: activeArray[6],\n        activeCompanyEight: activeArray[7],\n        activeCompanyNine: activeArray[8],\n        activeCompanyTen: activeArray[9],\n      })\n\n\n\n    })\n    axios({\n      method: 'GET',\n      url: `https://www.alphavantage.co/query?/`,\n      dataResponse: 'json',\n      params: {\n        function: 'GLOBAL_QUOTE',\n        symbol: 'FB',\n        apikey: \"WPZV8PD9NGMXNUEF\",\n        format: \"json\",\n\n      },\n    }).then(res => {\n      //res all the information for the searched stock ticker\n      res = res.data['Global Quote'];\n\n      this.setState({\n        stockQuote: Object.entries(res),\n        userInput: \"\",\n      })\n\n      axios({\n        method: 'GET',\n        url: `https://www.alphavantage.co/query?/`,\n        dataResponse: 'json',\n        params: {\n          function: 'TIME_SERIES_INTRADAY',\n          symbol: 'GOOG',\n          apikey: \"WPZV8PD9NGMXNUEF\",\n          interval: '5min',\n          format: \"json\",\n        },\n\n      }).then(result => {\n        result = result.data[\"Time Series (5min)\"];\n        let datesArray = [];\n        let pricesArray = [];\n\n        for (let i in result) {\n          datesArray.push(i)\n          pricesArray.push(result[i][\"4. close\"])\n        }\n\n        let arrayDataSets = [{\n          label: '',\n          data: pricesArray,\n        }]\n\n        let myChartData = {\n          arrayDataSets,\n          pricesArray\n        }\n\n        this.state.chartData.datasets[0].label = 'GOOG';\n        this.state.chartData.labels = datesArray.reverse();\n        this.state.chartData.datasets[0].data = pricesArray.reverse();\n\n        this.setState({\n          // chartData: this.state.myChartData\n          state: this.state,\n        })\n\n      })\n\n\n      axios({\n        method: 'GET',\n        url: `https://financialmodelingprep.com/api/v3/company/profile/GOOG`,\n        dataResponse: 'json',\n      }).then(result => {\n\n        result = result.data['profile'];\n\n        let percentString = result['changesPercentage'].replace(/[!@#$%^&*()]/g, \"\");\n\n        this.setState({\n          companyTitle: result['companyName'],\n          mainPercentChange: percentString,\n        })\n\n      })\n    })\n  }\n\n\n  handleChange = (event) => {\n    event.preventDefault()\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    })\n  }\n\n  handleAutofill = (event) => {\n    event.preventDefault()\n    let symbolting = this.state.userInput\n\n    if (symbolting !== ''){\n      axios({\n        method: 'GET',\n        url: 'https://www.alphavantage.co/query?/',\n        params: {\n          function: 'SYMBOL_SEARCH',\n          keywords: symbolting,\n          apikey: \"WPZV8PD9NGMXNUEF\",\n        },\n      }).then(result => {\n        result = result.data[\"bestMatches\"]\n\n\n        this.setState({\n          autoFill: result\n        })\n      })\n    }else{\n      this.setState({\n        autoFill:[]\n      })\n    }\n  }\n\n  handleFillTextbox = index => {\n    let symbol = this.state.autoFill[index][\"1. symbol\"]\n\n    this.setState({\n      userInput: symbol,\n      autoFill: [],\n    })\n  }\n\n\n  handleSubmit = (event) => {\n    event.preventDefault()\n\n    let symbol = this.state.userInput\n\n    if (symbol !==''){\n      axios({\n        method: 'GET',\n        url: `https://www.alphavantage.co/query?/`,\n        dataResponse: 'json',\n        params: {\n          function: 'GLOBAL_QUOTE',\n          symbol: symbol,\n          apikey: \"WPZV8PD9NGMXNUEF\",\n          format: \"json\",\n\n        },\n      }).then(res => {\n        //res all the information for the searched stock ticker\n        res = res.data['Global Quote'];\n\n        let justTheTicker = res['01. symbol'];\n\n        this.setState({\n          stockQuote: Object.entries(res),\n          userInput: \"\",\n          companyTicker: justTheTicker,\n        })\n\n\n        axios({\n          method: 'GET',\n          url: `https://www.alphavantage.co/query?/`,\n          dataResponse: 'json',\n          params: {\n            function: 'TIME_SERIES_INTRADAY',\n            symbol: symbol,\n            apikey: \"WPZV8PD9NGMXNUEF\",\n            interval: '5min',\n            format: \"json\",\n          },\n\n        }).then(result => {\n          result = result.data[\"Time Series (5min)\"];\n\n          let datesArray = [];\n          let pricesArray = [];\n\n          for (let i in result) {\n            datesArray.push(i)\n            pricesArray.push(result[i][\"4. close\"])\n          }\n\n\n          let arrayDataSets = [{\n            label: '',\n            data: pricesArray,\n          }]\n\n          let myChartData = {\n            arrayDataSets,\n            pricesArray\n          }\n\n          \n          this.state.chartData.datasets[0].label = symbol;\n          this.state.chartData.labels = datesArray.reverse();\n          this.state.chartData.datasets[0].data = pricesArray.reverse();\n\n          this.setState({\n            // chartData: myChartData\n            state: this.state,\n          })\n\n        })\n\n\n        axios({\n          method: 'GET',\n          url: `https://financialmodelingprep.com/api/v3/company/profile/${symbol}`,\n          dataResponse: 'json',\n        }).then(result=>{\n\n          res = result.data['profile'];\n\n          let companySymbol = result.data['symbol']\n\n          let percentString = res['changesPercentage'].replace(/[!@#$%^&*()]/g, \"\");\n\n          this.setState({\n            companyTitle: res['companyName'],\n            mainPercentChange: percentString,\n            exchange: res[\"exchange\"],\n            industry: res[\"industry\"],\n            companyWebsite: res[\"website\"],\n            companyDescription: res[\"description\"],\n            ceo: res[\"ceo\"],\n            sector: res[\"sector\"],\n            companyImage: res[\"image\"],\n            companyTicker: companySymbol,\n\n          })\n\n        })\n      })\n\n    }else{\n      alert('please enter a company ticker')\n    }\n  }\n\n\n\n\n  render() {\n\n\n    return (\n      <div className=\"App\">\n        <div className=\"particles\">\n          <Particles params={{\n            \"particles\": {\n              \"number\": {\n                \"value\": 160,\n                \"density\": {\n                  \"enable\": false\n                }\n              },\n              \"size\": {\n                \"value\": 3,\n                \"random\": true,\n                \"anim\": {\n                  \"speed\": 4,\n                  \"size_min\": 0.3\n                }\n              },\n              \"line_linked\": {\n                \"enable\": false\n              },\n              \"move\": {\n                \"random\": true,\n                \"speed\": 1,\n                \"direction\": \"top\",\n                \"out_mode\": \"out\"\n              }\n            },\n            \"interactivity\": {\n              \"events\": {\n                \"onhover\": {\n                  \"enable\": true,\n                  \"mode\": \"bubble\"\n                },\n                \"onclick\": {\n                  \"enable\": true,\n                  \"mode\": \"repulse\"\n                }\n              },\n              \"modes\": {\n                \"bubble\": {\n                  \"distance\": 250,\n                  \"duration\": 2,\n                  \"size\": 0,\n                  \"opacity\": 0\n                },\n                \"repulse\": {\n                  \"distance\": 400,\n                  \"duration\": 4\n                }\n              }\n            }\n          }} />\n        </div>\n        <div className=\"mainContentWrapper\">\n          <nav>\n            <div className=\"title\">\n              <h1>Juno</h1>\n              <h1>Finance</h1>\n            </div>\n  \n            <div className=\"searchAutofill\">\n              <form autoComplete=\"off\" action=\"\">\n                <div className=\"searchBar\">\n                  <input type=\"text\" name=\"userInput\" onSubmit={this.handleSubmit} value={this.state.userInput} onChange={this.handleChange} onKeyUp={this.handleAutofill}></input>\n                  <button className=\"searchButton\" type=\"submit\" value=\"submit\" onSubmit={this.handleSubmit} onClick={this.handleSubmit}><i className=\"fa fa-search\"></i></button>\n                </div>\n              </form>\n              <ul className=\"dropdownSearch\">\n                {\n                  this.state.autoFill.map((value, index) => {\n                    return <li key={index} onClick={() => this.handleFillTextbox(index)} onSubmit={this.handleSubmit}> {value[\"1. symbol\"]} - {value[\"2. name\"]}</li>\n                  })\n                }\n              </ul>\n            </div>\n            <ul className=\"userPortfolio\">\n                \n            </ul>\n          </nav>\n          \n  \n  \n  \n          <main>\n            <div className='banner'>\n              <ul className=\"activeList\">\n                <li className=\"activeContainer a1\">\n                  <h4>{this.state.activeCompanyOne[\"ticker\"]}</h4>\n                  <p>{this.state.activeCompanyOne[\"price\"]} (<span style={{ color: this.state.activeCompanyOne[\"changes\"] > 0 ? 'green' : 'red' }}>{this.state.activeCompanyOne[\"changes\"]}</span>)</p>\n                </li>\n                <li className=\"activeContainer a2\">\n                  <h4>{this.state.activeCompanyTwo[\"ticker\"]}</h4>\n                  <p>{this.state.activeCompanyTwo[\"price\"]} (<span style={{ color: this.state.activeCompanyTwo[\"changes\"] > 0 ? 'green' : 'red' }}>{this.state.activeCompanyTwo[\"changes\"]}</span>)</p>\n                </li>\n  \n                <li className=\"activeContainer a3\">\n                  <h4>{this.state.activeCompanyThree[\"ticker\"]}</h4>\n                  <p>{this.state.activeCompanyThree[\"price\"]} (<span style={{ color: this.state.activeCompanyThree[\"changes\"] > 0 ? 'green' : 'red' }}>{this.state.activeCompanyThree[\"changes\"]}</span>)</p>\n                </li>\n                <li className=\"activeContainer a4\">\n                  <h4>{this.state.activeCompanyFour[\"ticker\"]}</h4>\n                  <p>{this.state.activeCompanyFour[\"price\"]} (<span style={{ color: this.state.activeCompanyFour[\"changes\"] > 0 ? 'green' : 'red' }}>{this.state.activeCompanyFour[\"changes\"]}</span>)</p>\n                </li>\n  \n                <li className=\"activeContainer a5\">\n                  <h4>{this.state.activeCompanyFive[\"ticker\"]}</h4>\n                  <p>{this.state.activeCompanyFive[\"price\"]} (<span style={{ color: this.state.activeCompanyFive[\"changes\"] > 0 ? 'green' : 'red' }}>{this.state.activeCompanyFive[\"changes\"]}</span>)</p>\n                </li>\n                <li className=\"activeContainer a6\">\n                  <h4>{this.state.activeCompanySix[\"ticker\"]}</h4>\n                  <p>{this.state.activeCompanySix[\"price\"]} (<span style={{ color: this.state.activeCompanySix[\"changes\"] > 0 ? 'green' : 'red' }}>{this.state.activeCompanySix[\"changes\"]}</span>)</p>\n                </li>\n  \n                <li className=\"activeContainer a7\">\n                  <h4>{this.state.activeCompanySeven[\"ticker\"]}</h4>\n                  <p>{this.state.activeCompanySeven[\"price\"]} (<span style={{ color: this.state.activeCompanySeven[\"changes\"] > 0 ? 'green' : 'red' }}>{this.state.activeCompanySeven[\"changes\"]}</span>)</p>\n                </li>\n                <li className=\"activeContainer a8\">\n                  <h4>{this.state.activeCompanyEight[\"ticker\"]}</h4>\n                  <p>{this.state.activeCompanyEight[\"price\"]} (<span style={{ color: this.state.activeCompanyEight[\"changes\"] > 0 ? 'green' : 'red' }}>{this.state.activeCompanyEight[\"changes\"]}</span>)</p>\n                </li>\n                <li className=\"activeContainer a9\">\n                  <h4>{this.state.activeCompanyNine[\"ticker\"]}</h4>\n                  <p>{this.state.activeCompanyNine[\"price\"]} (<span style={{ color: this.state.activeCompanyNine[\"changes\"] > 0 ? 'green' : 'red' }}>{this.state.activeCompanyNine[\"changes\"]}</span>)</p>\n                </li>\n                <li className=\"activeContainer a10\">\n                  <h4>{this.state.activeCompanyTen[\"ticker\"]}</h4>\n                  <p>{this.state.activeCompanyTen[\"price\"]} (<span style={{ color: this.state.activeCompanyTen[\"changes\"] > 0 ? 'green' : 'red' }}>{this.state.activeCompanyTen[\"changes\"]}</span>)</p>\n                </li>\n  \n              </ul>\n  \n            </div>\n  \n  \n            <div className=\"wrapper chartNumbersInfo\">\n              <h2>{this.state.companyTitle} (<span style={{ color: this.state.mainPercentChange > 0 ? 'green' : 'red' }}>{this.state.mainPercentChange}%</span>) </h2>\n  \n              <div className=\"numbersGraph\">\n                <div className=\"companyNumbers\">\n                  \n                  <ul className=\"stockInformation\">\n                    {\n                      this.state.stockQuote.map((value, index) => {\n                        return <li key={index}><span>{value[0]}</span> <span>{value[1]}</span></li>\n                        \n                      })\n                    }\n                  </ul>\n                </div>\n                <div className=\"stockChart\">\n                  <Line\n                    data={this.state.chartData}\n                    width={500}\n                    height={400}\n                    options={{maintainAspectRatio : false}}\n                    />\n                </div>\n              </div>\n            </div>\n  \n            <div className=\"aboutNews wrapper\">\n              <div className=\"aboutCompany\">\n                  <h4>{this.state.companyTitle} Key Info</h4>\n                  <h5>Company CEO: {this.state.ceo}</h5>\n                  <h5>Company URL: <a href={this.state.companyWebsite}>{this.state.companyWebsite}</a></h5>\n                  <h5>Exchange: {this.state.exchange}</h5>\n                  <h5>Industry: {this.state.industry}</h5>\n                  <h5>Sector: {this.state.sector}</h5>\n  \n                  <h4 className=\"companyParagraph\">About {this.state.companyTitle}</h4>\n                  <p>{this.state.companyDescription}</p>\n              </div>\n  \n              <ul className=\"news\">\n                {\n                  this.state.topNews.map((value, index) => {\n                    return <li key={index}>\n                      <h3> <a href={value['news_url']}>{value[\"title\"]}</a></h3>\n                      <div className=\"newsImage\"> <img src={value['image_url']}></img> </div>\n                      <p>{value[\"text\"]}</p>\n                    \n                    </li>\n                  })\n                }\n              </ul>\n            </div>\n  \n          </main>\n        </div>\n        <footer>\n          <p>Copyright © Neel Patel 2019</p>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport '../node_modules/font-awesome/css/font-awesome.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}